
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\prevalence\plot_prevalence_monthly.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_prevalence_plot_prevalence_monthly.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_prevalence_plot_prevalence_monthly.py:


Monthly prevalence (yearly)
===========================

This example computes the prevalence of dengue in the ``HTD`` as the
proportion of patients which were diagnosed with Dengue based on any
positive result for the ``NS1``, ``PCR`` or ``serology`` tests for
each year from 1999 to 2021.

.. GENERATED FROM PYTHON SOURCE LINES 11-126

.. code-block:: default
   :lineno-start: 11

    # Libraries
    import calendar
    import pandas as pd
    import numpy as np
    import seaborn as sns
    import matplotlib.pyplot as plt

    # DataBlend library
    from datablend.core.repair.correctors import oucru_dengue_interpretation_feature

    # Seaborn
    sns.set_theme(style="whitegrid")


    # ---------------------------------
    # Methods
    # ---------------------------------
    def prevalence(x):
        return (np.sum(x) / len(x)) * 100


    # ---------------------------------
    # Constants
    # ---------------------------------
    # The data filepath
    path = '../../resources/data/20210313-v0.0.8/combined/combined_tidy.csv'

    # Features
    features = ['study_no',
                'date',
                'dsource',
                'pcr_dengue_serotype',
                'igm_interpretation',
                'igg_interpretation',
                'ns1_interpretation',
                'ns1_plasma_interpretation',
                'ns1_platelia_interpretation',
                'ns1_urine_interpretation',
                'serology_interpretation',
                'serology_single_interpretation',
                'serology_paired_interpretation']

    # ---------------------------------
    # Main
    # ---------------------------------
    # Read data
    data = pd.read_csv(path, low_memory=False,
                             parse_dates=['date'],
                             usecols=features)

    # Format
    data = data.convert_dtypes()
    data = data[features]

    # These datasets do not have pcr_dengue_serotype.
    data = data[~data.dsource.isin(['01nva', '42dx'])]

    # Add dengue interpretation
    data['dengue_interpretation'] = \
        oucru_dengue_interpretation_feature(data,
            pcr=True, ns1=True, igm=True,
            paired_igm_igg=True, default=False)

    # Overall outcome for patient
    patients = data.groupby('study_no').max()
    patients['month'] = patients.date.dt.month
    patients['year'] = patients.date.dt.year

    # Show
    print("\nPatients:")
    print(patients)


    # Compute prevalence
    # ------------------
    # Compute prevalence
    prevalence = patients.reset_index() \
        .groupby(by=['month', 'year']).agg( \
            prevalence=('dengue_interpretation', prevalence),
            n_patients=('study_no', 'count'))

    # Drop extremes
    #idxs = prevalence.prevalence.between(0.01, 99.9)

    # Clean for plotting
    prevalence = prevalence.reset_index()
    #prevalence = prevalence[idxs]

    # Format month
    #prevalence.month = prevalence.month.apply(
    #    lambda x: calendar.month_abbr[x])

    # Create tables
    table_prevalence = pd.pivot_table(prevalence,
        index=['year'], values='prevalence', columns=['month'])
    table_npatients = pd.pivot_table(prevalence,
        index=['year'], values='n_patients', columns=['month'])

    # Month numbers to abbr
    def month_abbr(v):
        return [calendar.month_abbr[x] for x in v]

    table_prevalence.columns = month_abbr(table_prevalence.columns)
    table_npatients.columns = month_abbr(table_npatients.columns)
    prevalence.month = month_abbr(prevalence.month)

    # Show
    print("\n")
    print(prevalence)
    print("\nPrevalence table:")
    print(table_prevalence.round(2))
    print("\n#Patients table:")
    print(table_npatients.round(0))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Applying... oucru_dengue_interpretation_feature.

    Patients:
                        date dsource pcr_dengue_serotype igm_interpretation igg_interpretation  ... serology_single_interpretation serology_paired_interpretation dengue_interpretation month  year
    study_no                                                                                    ...                                                                                                
    06dx-06DXA001 2009-09-01    06dx              DENV-1           Positive           Positive  ...                      Secondary                      Secondary                  True     9  2009
    06dx-06DXA002 2009-08-31    06dx              DENV-1           Positive           Positive  ...                      Secondary                      Secondary                  True     8  2009
    06dx-06DXA003 2009-08-04    06dx                <NA>               <NA>               <NA>  ...                           <NA>                           <NA>                 False     8  2009
    06dx-06DXA004 2009-08-10    06dx              DENV-1           Positive           Positive  ...                      Secondary                           <NA>                  True     8  2009
    06dx-06DXA005 2009-09-04    06dx              DENV-1           Positive           Positive  ...                      Secondary                           <NA>                  True     9  2009
    ...                  ...     ...                 ...                ...                ...  ...                            ...                            ...                   ...   ...   ...
    md-995        2003-08-27      md              DENV-2               <NA>           Positive  ...                           <NA>                           <NA>                  True     8  2003
    md-996        2003-07-29      md                <LOD               <NA>           Positive  ...                           <NA>                           <NA>                 False     7  2003
    md-997        2003-08-30      md                <LOD               <NA>           Positive  ...                           <NA>                           <NA>                 False     8  2003
    md-998        2003-08-29      md                <LOD               <NA>           Positive  ...                           <NA>                           <NA>                 False     8  2003
    md-999        2003-08-29      md              DENV-4               <NA>           Positive  ...                           <NA>                           <NA>                  True     8  2003

    [15670 rows x 15 columns]


        month  year  prevalence  n_patients
    0     Jan  2000   33.333333           3
    1     Jan  2001   20.000000           5
    2     Jan  2002   15.789474          19
    3     Jan  2003   25.000000          12
    4     Jan  2004   62.857143          35
    ..    ...   ...         ...         ...
    190   Dec  2010   42.857143         252
    191   Dec  2011   31.451613         248
    192   Dec  2012   33.568905         283
    193   Dec  2013   31.547619         168
    194   Dec  2014   44.444444          18

    [195 rows x 4 columns]

    Prevalence table:
            Jan     Feb    Mar     Apr    May     Jun    Jul     Aug    Sep    Oct     Nov    Dec
    year                                                                                         
    1999    NaN     NaN    NaN     NaN    NaN     NaN  25.00   33.33   0.00  42.86    0.00  50.00
    2000  33.33   33.33  33.33   50.00  36.36   40.00  66.67   50.00  45.45  60.00   50.00  66.67
    2001  20.00   50.00  50.00   18.75  17.24   15.22  30.56   52.94  20.00  27.91    6.98  15.56
    2002  15.79   28.57  22.22   16.67   6.67   10.00  13.04   12.50  21.43   7.14    0.00  19.57
    2003  25.00   18.75  11.76   37.50  58.33   43.48  50.00   51.61  79.03  67.21   64.71  71.70
    2004  62.86   50.00  14.29    0.00  29.03   34.62  52.50   19.05   8.16   8.82   20.41  23.53
    2005  36.00   57.14  45.45   60.00  20.00   55.56  88.24   61.90  62.50  48.98   35.09  48.05
    2006  62.07   40.00  50.00   60.53  28.81   33.33  51.61   52.14  54.40  59.44   48.99  54.48
    2007  50.48   42.31  52.08   36.54  47.06   49.51  64.88   71.88  71.26  67.57   63.57  57.19
    2008  52.11   52.17  47.62   47.06  55.36   64.10  69.77   68.25  62.03  66.13   63.68  66.67
    2009  68.18   30.43  45.10   22.22  26.42   47.76  30.43   36.21  58.14  59.46   60.98  48.94
    2010  93.33  100.00  50.00   33.33  30.00   22.22  47.06   52.78  61.11  35.29   43.98  42.86
    2011  51.85   28.05  26.98   22.12  25.66   31.84  43.41   46.99  46.61  28.32   30.38  31.45
    2012  29.07   17.22  13.73   11.50  17.79   24.46  36.00   45.21  33.33  19.22   23.38  33.57
    2013  18.66   16.67  19.05    9.32   6.17    8.64  24.32   36.52  31.75  30.26   27.66  31.55
    2014  58.14   22.22  15.09   12.50   7.79   13.46  33.33   30.36  22.73  26.67   44.12  44.44
    2015    NaN     NaN    NaN     NaN    NaN     NaN    NaN     NaN    NaN    NaN  100.00    NaN
    2018    NaN     NaN    NaN     NaN    NaN     NaN    NaN  100.00    NaN    NaN     NaN    NaN
    2020    NaN  100.00    NaN  100.00    NaN  100.00   0.00   50.00   0.00    NaN     NaN    NaN
    2021    NaN     NaN    NaN     NaN    NaN     NaN    NaN     NaN    NaN    NaN  100.00    NaN

    #Patients table:
            Jan    Feb    Mar    Apr    May    Jun    Jul    Aug    Sep    Oct    Nov    Dec
    year                                                                                    
    1999    NaN    NaN    NaN    NaN    NaN    NaN    4.0    9.0    3.0    7.0    4.0    8.0
    2000    3.0    6.0    3.0    4.0   11.0    5.0    9.0   14.0   11.0    5.0    4.0    3.0
    2001    5.0    2.0    8.0   16.0   29.0   46.0   36.0   34.0   30.0   43.0   43.0   45.0
    2002   19.0    7.0    9.0   12.0   15.0   10.0   23.0   24.0   14.0   42.0   29.0   46.0
    2003   12.0   16.0   17.0   16.0   12.0   23.0   36.0   62.0   62.0   61.0   85.0  106.0
    2004   35.0   24.0   35.0    8.0   31.0   26.0   40.0   42.0   49.0   34.0   49.0   85.0
    2005   25.0    7.0   11.0   10.0   15.0    9.0   17.0   21.0   32.0   49.0   57.0   77.0
    2006   58.0   15.0   40.0   38.0   59.0  114.0   93.0  117.0  125.0  143.0  149.0  145.0
    2007  105.0   52.0   48.0   52.0   68.0  103.0  168.0  192.0  167.0  222.0  258.0  306.0
    2008  142.0   46.0   63.0   51.0   56.0   78.0  129.0  126.0  187.0  186.0  212.0  207.0
    2009   66.0   23.0   51.0   36.0   53.0   67.0  115.0  116.0   86.0   74.0   82.0   47.0
    2010   15.0    4.0    4.0    9.0   10.0    9.0   17.0   36.0   36.0   51.0  241.0  252.0
    2011  108.0   82.0  126.0  113.0  113.0  179.0  258.0  332.0  251.0  279.0  260.0  248.0
    2012   86.0  180.0  233.0  226.0  208.0  278.0  325.0  334.0  288.0  307.0  355.0  283.0
    2013  134.0   48.0  105.0  161.0  162.0  162.0  185.0  178.0  126.0  195.0  235.0  168.0
    2014   43.0   27.0   53.0   48.0   77.0   52.0   36.0   56.0   44.0   45.0   34.0   18.0
    2015    NaN    NaN    NaN    NaN    NaN    NaN    NaN    NaN    NaN    NaN    1.0    NaN
    2018    NaN    NaN    NaN    NaN    NaN    NaN    NaN    1.0    NaN    NaN    NaN    NaN
    2020    NaN    1.0    NaN    1.0    NaN    1.0    1.0    2.0    1.0    NaN    NaN    NaN
    2021    NaN    NaN    NaN    NaN    NaN    NaN    NaN    NaN    NaN    NaN    1.0    NaN




.. GENERATED FROM PYTHON SOURCE LINES 127-131

Lets plot the ``boxplot`` with the monthly dengue prevalence per
year. The x-axis represents the month and the y-axis the prevalence
in %. In addition, to the distribution (boxplot) the single markers
have been displayed.

.. GENERATED FROM PYTHON SOURCE LINES 131-155

.. code-block:: default
   :lineno-start: 132


    # --------------------------
    # Plot boxplot
    # --------------------------
    # Initialize the matplotlib figure
    f, ax = plt.subplots(figsize=(6, 3))

    # Draw boxplot
    sns.boxplot(x="month", y="prevalence",
        data=prevalence, whis=[0, 100], width=.6,
        linewidth=0.75, palette="vlag")

    # Draw each observation
    sns.stripplot(x="month", y="prevalence",
        data=prevalence, dodge=True,
        linewidth=0.2, palette='vlag')

    # Sns plot config
    sns.despine(left=True, bottom=True)

    # Add a legend and informative axis label
    ax.set(xlabel="", ylabel="Prevalence (%)",
           title="Monthly dengue prevalence in HTD")




.. image:: /_examples/prevalence/images/sphx_glr_plot_prevalence_monthly_001.png
    :alt: Monthly dengue prevalence in HTD
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [Text(0.5, 0.24999999999999467, ''), Text(30.75, 0.5, 'Prevalence (%)'), Text(0.5, 1.0, 'Monthly dengue prevalence in HTD')]



.. GENERATED FROM PYTHON SOURCE LINES 156-158

Let's create the same figure but adding the prevalence values
in a ``table`` below.

.. GENERATED FROM PYTHON SOURCE LINES 158-201

.. code-block:: default
   :lineno-start: 159


    # ----------------------
    # Plot boxplot and table
    # ----------------------
    # Initialize the matplotlib figure
    f, ax = plt.subplots(figsize=(6, 6))

    # Draw boxplot
    sns.boxplot(x="month", y="prevalence",
        data=prevalence, whis=[0, 100], width=.6,
        linewidth=0.75, palette="vlag")

    # Draw each observation
    sns.stripplot(x="month", y="prevalence",
        data=prevalence, dodge=True,
        linewidth=0.2, palette='vlag')

    # Sns plot config
    sns.despine(left=True, bottom=True)

    # Create aux table for visualization
    aux = table_prevalence.round(2)\
        .astype(str).replace({'nan': '-'})

    # Draw table
    table = plt.table(cellText=aux.to_numpy(),
                      rowLabels=aux.index,
                      colLabels=aux.columns,
                      cellLoc='center')
    table.auto_set_font_size(False)
    table.set_fontsize(7.5)
    table.scale(1, 3.2)

    # Sns config
    sns.despine(left=True, bottom=True)

    # Add a legend and informative axis label
    ax.set(xlabel='', ylabel='Prevalence (%)', xticks=[],
           title="Monthly dengue prevalence in HTD")

    # Adjust subplots
    plt.subplots_adjust(left=0.2, bottom=0.65)




.. image:: /_examples/prevalence/images/sphx_glr_plot_prevalence_monthly_002.png
    :alt: Monthly dengue prevalence in HTD
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 202-211

Lets plot the ``heatmaps`` with (i) the monthly dengue prevalence
per year and (ii) the number of patients with/without dengue used
to compute such prevalence. It is important to highlight that
in previous plots some extreme prevalence values (either 0% or
100%) where found. As shown in the figure below, these correspond
to months in which there are not enough patients (<4) to
accurately describe the prevalence.



.. GENERATED FROM PYTHON SOURCE LINES 211-239

.. code-block:: default
   :lineno-start: 212


    # -----------------------
    # Plot heatmaps
    # ----------------------
    # Create figure
    f, ax = plt.subplots(1, 2, figsize=(14, 6))
    ax = ax.flatten()

    # Draw a heatmap with the numeric values in each cell
    sns.heatmap(table_prevalence, annot=True, fmt='.2f',
        annot_kws={'fontsize': 8}, linewidths=.5, ax=ax[0],
        cmap=sns.cm.rocket_r)

    # Configure axes
    ax[0].set(title="Monthly dengue prevelence (%) in HTD")

    # Draw a heatmap with the numeric values in each cell
    sns.heatmap(table_npatients, annot=True, fmt='.0f',
        annot_kws={'fontsize': 10}, linewidths=.5, ax=ax[1],
        cmap=sns.cm.rocket_r)

    # Configure axes
    ax[1].set(title="Number of patients (study) in HTD")

    # Adjust layout
    plt.tight_layout()





.. image:: /_examples/prevalence/images/sphx_glr_plot_prevalence_monthly_003.png
    :alt: Monthly dengue prevelence (%) in HTD, Number of patients (study) in HTD
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 240-245

If we want to check whether the number of patients is directly
affecting the prevalence seen in the HTD hospital we can plot
their correlation (e.g.) as shown in the picture there is no
strong linear correlation between the number of patients and
the prevalence.

.. GENERATED FROM PYTHON SOURCE LINES 245-268

.. code-block:: default
   :lineno-start: 246


    # ----------------
    # Plot correlation
    # ----------------
    # Create figure
    f, ax = plt.subplots(1, 1, figsize=(4, 4))

    # Palette
    cmap = sns.diverging_palette(220, 10, as_cmap=True)

    # Mask
    mask = np.triu(np.ones_like(prevalence.corr(), dtype=np.bool))

    # Draw heatmap
    sns.heatmap(prevalence.corr()*100, cmap=cmap, center=0,
        mask=mask, vmax=100, vmin=-100, square=True, linewidths=0.5,
        cbar_kws={'shrink':.5}, annot=True, fmt=".0f",
                annot_kws={"size": 10})

    # Configure axes
    ax.set(title="Correlation")

    # Show
    plt.show()


.. image:: /_examples/prevalence/images/sphx_glr_plot_prevalence_monthly_004.png
    :alt: Correlation
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    C:\Users\kelda\Desktop\repositories\github\vital-oucru-clinical\main\examples\prevalence\plot_prevalence_monthly.py:256: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
    Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
      mask = np.triu(np.ones_like(prevalence.corr(), dtype=np.bool))





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  16.281 seconds)


.. _sphx_glr_download__examples_prevalence_plot_prevalence_monthly.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_prevalence_monthly.py <plot_prevalence_monthly.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_prevalence_monthly.ipynb <plot_prevalence_monthly.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
