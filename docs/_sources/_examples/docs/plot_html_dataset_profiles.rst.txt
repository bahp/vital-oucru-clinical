
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\docs\plot_html_dataset_profiles.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_docs_plot_html_dataset_profiles.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_docs_plot_html_dataset_profiles.py:


Datasets Profiles
====================

.. GENERATED FROM PYTHON SOURCE LINES 6-123




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    "\n# ------------------------------\n# Load data\n# ------------------------------\n# Path\npath = Path('./resources/datasets/combined/combined_tidy.csv')\n\n# Data\ndata = pd.read_csv(path,\n    parse_dates=['date'])\n\n# Columns with > 1 unique values\ncolumns = data.nunique() > 1\ncolumns = columns[columns].index.values\n\n# Filter\ndata = data[columns]\n\n# Title\ntitle = 'OUCRU - {0}'.format(path.name)\n\n# Generate data-prep report\n# -------------------------\nif DATAPREP_PROFILE:\n    report = create_report(data, title=title)\n    report.save('{0}/profile-dataprep/{1}'\n                .format(path_report, path.stem))\n\n# Generate pandas-profile report\n# ------------------------------\nif PANDAS_PROFILE:\n    profile = ProfileReport(data, title=title, explorative=True)\n    profile.to_file('{0}/profile-pandas/{1}.html'\n                    .format(path_report, path.stem))\n"





|

.. code-block:: default
   :lineno-start: 6

    """
    # Libraries
    import pandas as pd
    import warnings

    # Specific libraries
    from pathlib import Path

    # Libraries
    from pandas_profiling import ProfileReport
    from dataprep.eda import create_report

    # Ingore warnings
    warnings.simplefilter("ignore")

    # -----------------------------------
    # Constants
    # -----------------------------------
    # Path with raw data.
    path_data = Path('../../resources/data/20212002-v0.2/tidy')
    path_report = Path('../../docs/source/_static/datasets/')
    path_dataprep = path_report / 'profile-dataprep'
    path_pdprofile = path_report / 'profile-pandas'

    # Path where output HTML file should be stored.
    outpath = '../../docs/source/_static/feature_count.html'

    REPORT_PARTIAL = False
    PANDAS_PROFILE = False
    DATAPREP_PROFILE = False

    # ------------------------------
    # Create paths
    # ------------------------------
    # Create paths if they dont exist
    path_dataprep.mkdir(parents=True, exist_ok=True)
    path_pdprofile.mkdir(parents=True, exist_ok=True)

    # ------------------------------
    # Load data
    # ------------------------------
    # Initialise
    data = {}

    # Loop filling data
    for path in sorted(list(path_data.glob('**/*.csv'))):
        if not REPORT_PARTIAL:
            continue

        try:
            # Show information
            print("Loading... %s" % path.stem)

            # Load data
            data[path.name] = pd.read_csv(path,
                parse_dates=['date'])

            # Define information
            title = 'OUCRU - {0}'.format(path.name)

            # Columns with > 1 unique values
            columns = data[path.name].nunique() > 1
            columns = columns[columns].index.values
            datavld = data[path.name][columns]

            # Generate data-prep report
            # -------------------------
            if DATAPREP_PROFILE:
                report = create_report(datavld, title=title)
                report.save('{0}/{1}'
                    .format(path_dataprep, path.stem))

            # Generate pandas-profile report
            # ------------------------------
            if PANDAS_PROFILE:
                profile = ProfileReport(datavld, title=title)
                profile.to_file('{0}/{1}.html'
                    .format(path_pdprofile, path.stem))

        except Exception as e:
            print("Error", e)

    """
    """
    # ------------------------------
    # Load data
    # ------------------------------
    # Path
    path = Path('./resources/datasets/combined/combined_tidy.csv')

    # Data
    data = pd.read_csv(path,
        parse_dates=['date'])

    # Columns with > 1 unique values
    columns = data.nunique() > 1
    columns = columns[columns].index.values

    # Filter
    data = data[columns]

    # Title
    title = 'OUCRU - {0}'.format(path.name)

    # Generate data-prep report
    # -------------------------
    if DATAPREP_PROFILE:
        report = create_report(data, title=title)
        report.save('{0}/profile-dataprep/{1}'
                    .format(path_report, path.stem))

    # Generate pandas-profile report
    # ------------------------------
    if PANDAS_PROFILE:
        profile = ProfileReport(data, title=title, explorative=True)
        profile.to_file('{0}/profile-pandas/{1}.html'
                        .format(path_report, path.stem))
    """

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.001 seconds)


.. _sphx_glr_download__examples_docs_plot_html_dataset_profiles.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_html_dataset_profiles.py <plot_html_dataset_profiles.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_html_dataset_profiles.ipynb <plot_html_dataset_profiles.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
